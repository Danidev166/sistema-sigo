const { execSync } = require('child_process');
const fs = require('fs');

async function deployUpdate() {
  try {
    console.log('üöÄ Forzando actualizaci√≥n del servidor...');
    
    // Crear un archivo de timestamp para forzar el cambio
    const timestamp = new Date().toISOString();
    const updateFile = 'last-update.txt';
    
    fs.writeFileSync(updateFile, `√öltima actualizaci√≥n: ${timestamp}\n`);
    console.log('üìù Archivo de actualizaci√≥n creado');
    
    // Hacer commit y push
    console.log('üì§ Haciendo commit y push...');
    
    try {
      execSync('git add .', { stdio: 'inherit' });
      execSync(`git commit -m "Update: Fix PostgreSQL models and controllers - ${timestamp}"`, { stdio: 'inherit' });
      execSync('git push origin main', { stdio: 'inherit' });
      
      console.log('‚úÖ Cambios enviados a GitHub');
      console.log('üîÑ Render detectar√° los cambios y reiniciar√° autom√°ticamente');
      console.log('‚è±Ô∏è Espera 2-3 minutos para que el despliegue se complete');
      
    } catch (gitError) {
      console.log('‚ö†Ô∏è Error en git (normal si no hay cambios):', gitError.message);
      console.log('üí° Los cambios ya est√°n en el servidor, solo necesita reiniciarse');
    }
    
    console.log('\nüîó Endpoints para probar despu√©s del reinicio:');
    console.log('   - https://sistema-sigo.onrender.com/api/test/health');
    console.log('   - https://sistema-sigo.onrender.com/api/reportes-mejorado/dashboard');
    console.log('   - https://sistema-sigo.onrender.com/api/seguimiento-psicosocial');
    
  } catch (error) {
    console.error('‚ùå Error:', error.message);
  }
}

// Ejecutar si se llama directamente
if (require.main === module) {
  deployUpdate()
    .then(() => {
      console.log('\n‚úÖ Proceso completado');
      process.exit(0);
    })
    .catch((error) => {
      console.error('‚ùå Error:', error);
      process.exit(1);
    });
}

module.exports = { deployUpdate };
